syntax = "proto3";

package flare.proto.v1;
option go_package = "./pb";

message FlareAuthorizationMetadata {
  string service_id = 1;
  string authorization_token = 2;
}

message ClientRegistrationMetadata {
  string service_name = 1;
  string service_description = 2;
  string service_repository = 3;
  string service_maintainer = 4;
  bool service_is_public = 5;
  optional string service_homepage = 6;
}

message ClientAuthorizationMetadata {
  ClientAuthorizationProtocol protocol = 1;
  ClientAuthorizationAlgorithm algorithm = 2;
  string authorize_address = 3;
  int64 authorize_timeout_seconds = 4;
  int64 authorize_retry_times = 5;
  optional string authorize_allow_ips = 6;
  optional bytes authorize_payload = 7;
}

enum ClientAuthorizationProtocol {
  CLIENT_AUTHORIZATION_PROTOCOL_UNSPECIFIED = 0;
  CLIENT_AUTHORIZATION_PROTOCOL_HTTP = 1;
  CLIENT_AUTHORIZATION_PROTOCOL_HTTPS = 2;
  CLIENT_AUTHORIZATION_PROTOCOL_GRPC = 3;
}

enum ClientAuthorizationAlgorithm {
  CLIENT_AUTHORIZATION_ALGORITHM_UNSPECIFIED = 0;
  CLIENT_AUTHORIZATION_ALGORITHM_NONE = 1;
  CLIENT_AUTHORIZATION_ALGORITHM_STATIC_TOKEN = 2;
  CLIENT_AUTHORIZATION_ALGORITHM_RSA = 3;
  CLIENT_AUTHORIZATION_ALGORITHM_AES = 4;
}

message ClientMetadata {
  string service_name = 1;
  string service_description = 2;
  string service_repository = 3;
  string service_maintainer = 4;
  bool service_is_public = 5;
  string service_homepage = 6;
  int64 service_registered_at = 7;
}

message ClientSecretMetadata {
  string service_id = 2;
  string service_secret = 3;
}

message UserRegistrationMetadata {
  string user_name = 1;
  string user_email = 2;
  string encrypted_user_password = 3;
}

message UserMetadata {
  string user_id = 1;
  string user_name = 2;
  string user_email = 3;
  int64 user_registered_at = 4;
  bool user_is_validated = 5;
  optional string user_session_token = 6;
  optional int64 user_session_expired_at = 7;
}